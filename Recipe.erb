ARCH=$(arch)
APP=<%= name %>
VERSION=0.6.4~git20150428+14
export DEBIAN_FRONTEND=noninteractive

# Install what we can via packages
sudo apt-get update && sudo apt-get -y upgrade
sudo apt-get -y install software-properties-common shared-mime-info python-xdg  libstartup-notification0 \
mercurial unzip zip autoconf2.13 libgtk-3-dev libgtk2.0-dev libgconf2-dev libdbus-glib-1-dev yasm \
libasound2-dev libpulse-dev libxt-dev libx11-dev libx11-xcb-dev libxext-dev libxcb-shm0-dev
# We are to build from source...
# sudo add-apt-repository ppa:plasmazilla/releases
#  sudo apt-get update
#  sudo apt-get -y install firefox-plasma


#Build Firefox
export SHELL=/bin/bash
cd /usr/src
hg clone https://hg.mozilla.org/mozilla-central
cd mozilla-central
cat > mozconfig << EOF
ac_add_options --enable-system-hunspell
ac_add_options --enable-startup-notification
ac_add_options --enable-system-sqlite
ac_add_options --with-system-libevent
ac_add_options --with-system-libvpx
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-icu
ac_add_options --prefix=/usr
ac_add_options --enable-application=browser
ac_add_options --enable-optimize
ac_add_options --enable-gio
ac_add_options --enable-official-branding
ac_add_options --enable-safe-browsing
ac_add_options --enable-url-classifier
ac_add_options --enable-system-cairo
ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman
ac_add_options --with-pthreads
ac_add_options --with-system-bz2
ac_add_options --with-system-jpeg
ac_add_options --with-system-png
ac_add_options --with-system-zlib

mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/firefox-build-dir
EOF

touch mozconfig
./mach mercurial-setup
./mach configure --prefix=/usr
./mach build
########################################################################
# Build complete
# Now creating the AppDir
########################################################################
wget -q https://github.com/probonopd/AppImages/raw/master/functions.sh -O ./functions.sh
. ./functions.sh

cd /
cp /usr/share/applications/firefox.desktop .
sed -i -e "s|Exec=.*|Exec=firefox|g" firefox.desktop
sed -i -e "s|Icon=.*|Icon=default48.png|g" firefox.desktop
cp /usr/lib/firefox/browser/chrome/icons/default/default48.png .
get_desktopintegration firefox

APPDIR=firefox
mkdir -p /$APPDIR/$APP.AppDir
cd  /$APPDIR/$APP.AppDir
mv /firefox.* .
mv /default48.png .
get_apprun
mkdir -p ./usr/share; mv /usr/share/apport $_
mv /usr/share/applications ./usr/share
#mkdir -p ./usr/share/kde4/apps/kmozillahelper; mv /usr/share/kde4/apps/kmozillahelper/kmozillahelper.notifyrc $_
mv /usr/share/mime ./usr/share
mkdir -p ./usr/share/icons/hicolor/48
cp /usr/lib/firefox/browser/chrome/icons/default/default48.png ./usr/share/icons/hicolor/48/

export LD_LIBRARY_PATH=./usr/lib/:$LD_LIBRARY_PATH

patch_usr
move_lib
copy_deps # Three runs to ensure we catch indirect ones
delete_blacklisted
mkdir -p ./usr/bin
mv /usr/bin/firefox* ./usr/bin/
mkdir -p ./usr/lib; mv /usr/lib/firefox $_
mv /usr/lib/mozilla ./usr/lib/
mv /usr/lib/x86_64-linux-gnu/libstartup-notification-1.so* ./usr/lib/
mv /usr/lib/x86_64-linux-gnu/libxcb-util.so* ./usr/lib/
mv /usr/lib/firefox-addons ./usr/lib/
mkdir -p ./etc; mv /etc/apport $_
mv /etc/firefox ./etc/
mv /etc/apparmor.d ./etc/

# We don't bundle the developer stuff
rm -rf usr/include || true
rm -rf usr/lib/cmake || true
rm -rf usr/lib/pkgconfig || true
find /$APPDIR/$APP.AppDir/usr/lib/ -name '*.la' | xargs -i rm {}

########################################################################
# AppDir complete
# Now packaging it as an AppImage
########################################################################
cd /$APPDIR
rm /out/* || true
generate_appimage
